//@author: idwyr
//@help: monochrome flow texture fx
//@tags: texture
//@credits: 
#include "ColorSpace.fxh"
Texture2D from;
Texture2D to;
Texture2D pixelTex;
float scale <float uimin=0.0004; float uimax=0.02;>;
float progress <float uimin=0.0; float uimax=1.0;>;
SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = wrap;
    AddressV = wrap;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{	float4 pixelTexture = pixelTex.Sample(linearSampler, input.uv);	
	float2 offset = float2(0,0);
	if (pixelTexture.g<0.5) {offset.y += scale;} else {offset.y -= scale;}
	float4 feedback = to.Sample(linearSampler,input.uv+offset);
		   feedback+=sin(4.98)*to.Sample(linearSampler,input.uv-offset);
	float3 tempcolor = RGBtoHSL(feedback.rgb); 
	tempcolor.z -= 0.1; tempcolor.y +=0.01;tempcolor.x +=0.1;
	
	float3 result = HSLtoRGB(tempcolor);
	float4 c = lerp(from.Sample(linearSampler,input.uv),float4(result,1), progress);
	
	return c;
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



