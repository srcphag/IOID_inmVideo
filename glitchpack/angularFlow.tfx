//@author: idwyr
//@help: glitch angular offset
//@tags: texture
//@credits: 

#include "ColorSpace.fxh"

Texture2D from;
Texture2D to;
Texture2D control;
float scale;
float progress <float uimin=0.0; float uimax=1.0;>;
float flow;
float phase;

float squareSize;
SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{	
	
	float4 distortTex=control.Sample(linearSampler, input.uv);
	float2 distort = float2(distortTex.r*0.4,input.uv.y);
	float pixels = 100 * squareSize;
	float2 newUV = round(input.uv * pixels) / pixels;	
	float4 pixelTexture = control.Sample(linearSampler, newUV);
	float3 tmp = RGBtoHSL(pixelTexture.rgb);
	pixelTexture.rgb = HSLtoRGB(tmp);
	tmp.x += phase;
	pixelTexture.rgb = HSLtoRGB(tmp);
	float2 offset = float2(0,0);
	if (pixelTexture.r>0.5) {offset.x += scale;} else {offset.x -= scale;}
	if (pixelTexture.g<0.5) {offset.y += scale;} else {offset.y -= scale;}
	offset.y += 0.1*flow;
	float4 c = lerp (from.Sample(linearSampler,float2(input.uv.x, input.uv.y + flow)), to.Sample(linearSampler,input.uv+offset.xy), progress);
	return c;
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



